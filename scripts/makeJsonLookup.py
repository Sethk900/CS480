#Python 3 script that will iterate through a file full of vernaculars and create a dictionary meaningful to
#output generated by mordecai.  This dictionary will then be relevant to a program that will load it into
#memory from the json file that this script will generate.

from mordecai import Geoparser
import os
import json

geo = Geoparser()

#Open vernaculars.txt file (the database of names)
namesFile = open("vernaculars.txt", "r",errors="ignore")

#Define the lookup dictionary where all final key value pairs will go
lookupDict = {}
noDupe = set()    #Will be the data structure that holds the final list of names before sending to json
flag = False      #Will determine if we add the current character to the working string

#Move through the file iteratively for each species name
for line in namesFile:
    workingString = ""   #Resets the working string
    for character in line:
        if(flag == True and character != '|'):
            workingString = workingString + character
        if(character == '|' and flag == True):
            flag = False
            break
        if(character == '|' and flag == False):
            flag = True
    #Check to see if it's a place name.  If true, add it.  Otherwise, ignore.
    parse = geo.geoparse(workingString)
    tempSet = set([workingString])
    
    #For every place name we find, add an entry to our lookup dictionary
    for currentDict in parse:
        word = currentDict['word']
        if word not in lookupDict:       #If the lookup entry for the literal match does not exist, add it
            lookupDict[word] = set()
        lookupDict[word] = lookupDict[word]|tempSet         #Add the full species name to the current lookup entry

namesFile.close()   #We don't need this anymore, so close it

#Convert the set back into a dictionary so it's usable by the json converter
for key in lookupDict:
    lookupDict[key] = list(lookupDict[key])

#Write the lookup dictionary to a json file
with open("lookupDict.json", "w") as outputFile:
    json.dump(lookupDict, outputFile, indent="     ")
